{"version":3,"sources":["components/Missions.module.css","graphql/queries.js","graphql/index.js","components/Missions.js","App.js","index.js"],"names":["module","exports","GET_SPACE_MISSION","gql","client","ApolloClient","uri","cache","InMemoryCache","SpaceService","limit","query","variables","res","data","Error","launchesPast","Missions","useState","setData","loadSpaceMission","SpaceMission","getSpaceMission","mission","useEffect","console","log","className","styles","container","map","item","index","src","ships","image","alt","mission_name","rocket","rocket_name","launch_site","site_name_long","App","ReactDOM","createRoot","document","getElementById","render","ApolloProvider"],"mappings":"oGACAA,EAAOC,QAAU,CAAC,UAAY,4BAA4B,QAAU,0B,2KCCvDC,EAAoBC,YAAH,mRCCjBC,EAAS,IAAIC,IAAa,CACrCC,IAAK,mCACLC,MAAO,IAAIC,MAGPC,E,gJACJ,mHAAsBC,EAAtB,+BAA8B,GAA9B,kBAEsBN,EAAOO,MAAM,CAC7BA,MAAOT,EACPU,UAAW,CAAEF,WAJnB,WAEUG,EAFV,SAOiBA,EAAIC,KAPrB,sBAOiC,IAAIC,MAAM,2BAP3C,gCAQWF,EAAIC,KAAKE,cARpB,uG,6DAea,MAAIP,E,wBCSJQ,EA7BE,WACf,MAAwBC,mBAAS,IAAjC,mBAAOJ,EAAP,KAAaK,EAAb,KAEMC,EAAgB,iDAAG,8GACDC,EAAaC,gBAAgB,IAD5B,OACjBC,EADiB,OAEvBJ,EAAQI,GAFe,2CAAH,qDAUtB,OALAC,qBAAU,WACRJ,GACD,GAAE,IAEHK,QAAQC,IAAIZ,GAEV,qBAAKa,UAAWC,IAAOC,UAAvB,SACGf,EAAKgB,KAAI,SAACC,EAAMC,GACf,OACI,sBAAiBL,UAAWC,IAAOL,QAAnC,UACI,qBAAKU,IAAKF,GAAQA,EAAKG,MAAM,IAAMH,EAAKG,MAAM,GAAGC,MAAQJ,EAAKG,MAAM,GAAGC,MAAQ,kHAAmHC,IAAKL,EAAKM,eAC5M,4BAAIN,EAAKM,eACT,4BAAIN,EAAKO,OAAOC,cAChB,4BAAIR,EAAKS,YAAYC,mBAJfT,EAOf,KAGN,ECjBcU,MATf,WACE,OACE,gCACE,kDACA,cAAC,EAAD,MAGL,E,QCLYC,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH,cAACC,EAAA,EAAD,CAAgB5C,OAAQA,EAAxB,SACE,cAAC,EAAD,M","file":"static/js/main.d688a719.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Missions_container__1pkIu\",\"mission\":\"Missions_mission__vXeic\"};","import gql from \"graphql-tag\";\n\nexport const GET_SPACE_MISSION = gql`\n  query getSpaceMission($limit: Int!) {\n    launchesPast(limit: $limit) {\n      mission_name\n      launch_site {\n        site_name_long\n      }\n      rocket {\n        rocket_name\n      }\n      ships {\n        image\n      }\n    }\n  }\n`;\n","import { ApolloClient, InMemoryCache } from \"@apollo/client\";\nimport { GET_SPACE_MISSION } from \"./queries\";\n\nexport const client = new ApolloClient({\n  uri: \"https://api.spacex.land/graphql/\",\n  cache: new InMemoryCache(),\n});\n\nclass SpaceService {\n  async getSpaceMission(limit = 10) {\n    try {\n      const res = await client.query({\n        query: GET_SPACE_MISSION,\n        variables: { limit },\n      });\n\n      if (!res || !res.data) throw new Error(\"Something went wrong...\");\n      return res.data.launchesPast;\n    } catch (error) {\n      throw error;\n    }\n  }\n}\n\nexport default new SpaceService();\n","import React, { useState, useEffect } from \"react\";\nimport SpaceMission from \"../graphql\";\nimport styles from './Missions.module.css';\n\nconst Missions = () => {\n  const [data, setData] = useState([]);\n\n  const loadSpaceMission = async () => {\n    const mission = await SpaceMission.getSpaceMission(10);\n    setData(mission);\n  };\n\n  useEffect(() => {\n    loadSpaceMission();\n  }, []);\n\n  console.log(data);\n  return (\n    <div className={styles.container}>\n      {data.map((item, index) => {\n        return (\n            <div key={index} className={styles.mission}>\n                <img src={item && item.ships[0] && item.ships[0].image ? item.ships[0].image : 'https://media.wired.com/photos/5ed2b8129948303154121fe5/master/pass/Science_SpaceX-Launch-AP_20151700829737.jpg'} alt={item.mission_name}></img>\n                <p>{item.mission_name}</p>\n                <p>{item.rocket.rocket_name}</p>\n                <p>{item.launch_site.site_name_long}</p>\n            </div>\n        ) \n      })}\n    </div>\n  );\n};\n\nexport default Missions;\n","import React from 'react';\nimport Missions from './components/Missions';\n\n\n\nfunction App() {\n  return (\n    <div>\n      <h1>SpaceX Missions!</h1>\n      <Missions></Missions>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom/client\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport { ApolloProvider } from \"@apollo/client\";\nimport { client } from \"./graphql\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider> \n);\n"],"sourceRoot":""}